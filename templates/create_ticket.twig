<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Create Ticket</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.8/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
  <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
  <style>
    .cusor-pointer { cursor: pointer; }
  </style>
</head>
<body>
  <div class="container mt-5">
    <!-- Header -->
    <div class="d-flex align-items-center justify-content-center position-relative mb-4">
      <button type="button" class="btn btn-primary btn-sm position-absolute start-0 cusor-pointer" onclick="history.back()">
        Back
      </button>
      <h2 class="mb-0">Create Ticket</h2>
    </div>

    <form id="ticketForm" class="mt-4">
      <div class="row">
        <!-- Title -->
        <div class="col-12 mb-3">
          <label for="title" class="form-label">Title</label>
          <input type="text" id="title" class="form-control" placeholder="Enter title">
          <small id="titleError" class="text-danger d-none"></small>
        </div>

        <!-- Description -->
        <div class="col-12 mb-3">
          <label for="description" class="form-label">Description</label>
          <textarea id="description" class="form-control" rows="4" placeholder="Enter description"></textarea>
          <small id="descriptionError" class="text-danger d-none"></small>
        </div>

        <!-- Assignee -->
        <div class="col-12 mb-3">
          <label for="assignee" class="form-label">Assignee</label>
          <input type="text" id="assignee" class="form-control" placeholder="Enter assignee name">
          <small id="assigneeError" class="text-danger d-none"></small>
        </div>

        <!-- Status -->
        <div class="col-12 mb-3">
          <label for="status" class="form-label">Status</label>
          <select id="status" class="form-select">
            <option value="Open" selected>Open</option>
          </select>
          <small id="statusError" class="text-danger d-none"></small>
        </div>

        <!-- Submit -->
        <div class="col-12 mt-3">
          <button type="submit" class="btn btn-primary w-100" style="cursor: pointer;">Create Ticket</button>
        </div>
      </div>
    </form>
  </div>
<script src="./js/TicketStore.js"></script>
<!-- Load the external class -->
<script src="./js/TicketStore.js"></script>

<script>
  const ticketStore = new TicketStore();

  const ticketForm = document.getElementById('ticketForm');
  const titleInput = document.getElementById('title');
  const descriptionInput = document.getElementById('description');
  const assigneeInput = document.getElementById('assignee');
  const statusInput = document.getElementById('status');

  const titleError = document.getElementById('titleError');
  const descriptionError = document.getElementById('descriptionError');
  const assigneeError = document.getElementById('assigneeError');
  const statusError = document.getElementById('statusError');

  ticketForm.addEventListener('submit', (e) => {
    e.preventDefault();

    // Reset errors
    [titleError, descriptionError, assigneeError, statusError].forEach(el => {
      el.textContent = '';
      el.classList.add('d-none');
    });

    let valid = true;

    if (!titleInput.value.trim()) {
      titleError.textContent = 'Title is required';
      titleError.classList.remove('d-none');
      valid = false;
    } else if (titleInput.value.length < 6) {
      titleError.textContent = 'Title is too short';
      titleError.classList.remove('d-none');
      valid = false;
    }

    if (!descriptionInput.value.trim()) {
      descriptionError.textContent = 'Description is required';
      descriptionError.classList.remove('d-none');
      valid = false;
    } else if (descriptionInput.value.length < 6) {
      descriptionError.textContent = 'Description is too short';
      descriptionError.classList.remove('d-none');
      valid = false;
    }

    if (!assigneeInput.value.trim()) {
      assigneeError.textContent = 'Assignee is required';
      assigneeError.classList.remove('d-none');
      valid = false;
    }

    if (!valid) return;

    // ✅ Add ticket using external TicketStore class
    const newTicket = ticketStore.addTicket({
      title: titleInput.value.trim(),
      description: descriptionInput.value.trim(),
      assignee: assigneeInput.value.trim(),
      status: statusInput.value,
    });

    console.log('New ticket added:', newTicket);

    // ✅ Show toast (make sure Toastify is included in your HTML)
    Toastify({
      text: "Ticket created successfully!",
      duration: 1500,
      gravity: "top",
      position: "right",
      close: true,
      backgroundColor: "#0d6efd"
    }).showToast();

    // Redirect to dashboard after 1s
    setTimeout(() => {
      window.location.href = '/dashboard';
    }, 1000);
  });
</script>

 
</body>
</html>
